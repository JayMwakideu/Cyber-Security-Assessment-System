# Generated by Django 4.2.7 on 2025-05-19 07:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('mission', models.TextField(blank=True)),
                ('employee_count', models.CharField(choices=[('1-50', '1-50'), ('51-200', '51-200'), ('201-500', '201-500'), ('501-1000', '501-1000'), ('1000+', '1000+')], max_length=50)),
                ('industry', models.CharField(choices=[('Technology', 'Technology'), ('Finance', 'Finance'), ('Healthcare', 'Healthcare'), ('Education', 'Education'), ('Retail', 'Retail'), ('Other', 'Other')], max_length=50)),
                ('compliance_requirements', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tool_type', models.CharField(choices=[('Antivirus', 'Antivirus'), ('Firewall', 'Firewall'), ('Email Security', 'Email Security'), ('Backup', 'Backup'), ('SIEM', 'SIEM'), ('Patch Management', 'Patch Management'), ('Endpoint Protection', 'Endpoint Protection')], max_length=50)),
                ('tool_name', models.CharField(max_length=100)),
                ('in_use', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
        ),
        migrations.CreateModel(
            name='PhishingAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('date_completed', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('staff_count', models.IntegerField()),
                ('simulation_count', models.IntegerField()),
                ('click_rate', models.FloatField()),
                ('awareness_level', models.CharField(choices=[('High', 'High'), ('Moderate', 'Moderate'), ('Low', 'Low')], max_length=50)),
                ('feedback_provided', models.BooleanField()),
                ('reported_phishing', models.FloatField()),
                ('vulnerabilities', models.TextField(blank=True)),
                ('assessor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NISTAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('date_completed', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('control_id', models.CharField(max_length=50)),
                ('control_description', models.TextField()),
                ('compliance_status', models.CharField(choices=[('Compliant', 'Compliant'), ('Non-Compliant', 'Non-Compliant'), ('Partial', 'Partial')], max_length=50)),
                ('gaps_identified', models.TextField(blank=True)),
                ('control_family', models.CharField(max_length=100)),
                ('assessor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NetworkSecurity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_count', models.IntegerField()),
                ('firewall_count', models.IntegerField()),
                ('firewall_review_periodic', models.BooleanField()),
                ('internal_ip_count', models.CharField(choices=[('<50', '<50'), ('50-200', '50-200'), ('201-500', '201-500'), ('501+', '501+')], max_length=50)),
                ('dns_provider', models.CharField(max_length=100)),
                ('dns_monitoring', models.BooleanField()),
                ('notes', models.TextField(blank=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
        ),
        migrations.CreateModel(
            name='MobileWebAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('date_completed', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('app_name', models.CharField(max_length=255)),
                ('platform', models.CharField(choices=[('iOS', 'iOS'), ('Android', 'Android'), ('Both', 'Both'), ('Web', 'Web')], max_length=50)),
                ('user_count', models.IntegerField()),
                ('source_code_available', models.BooleanField()),
                ('encryption_used', models.BooleanField()),
                ('third_party_libraries', models.TextField(blank=True)),
                ('data_sensitivity', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=50)),
                ('vulnerabilities', models.TextField(blank=True)),
                ('compliance_status', models.CharField(choices=[('Compliant', 'Compliant'), ('Non-Compliant', 'Non-Compliant'), ('Partial', 'Partial')], max_length=50)),
                ('ssl_tls_implemented', models.BooleanField(default=False)),
                ('cms_used', models.TextField(blank=True)),
                ('assessor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaturityAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('date_completed', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('maturity_level', models.CharField(choices=[('Non-existent', 'Non-existent'), ('Compliance Focused', 'Compliance Focused'), ('Behaviour Change', 'Behaviour Change'), ('Culture Change', 'Culture Change'), ('Optimization', 'Optimization')], max_length=50)),
                ('training_frequency', models.CharField(choices=[('Never', 'Never'), ('Yearly', 'Yearly'), ('Quarterly', 'Quarterly'), ('Monthly', 'Monthly'), ('Continuous', 'Continuous')], max_length=50)),
                ('metrics_tracked', models.BooleanField()),
                ('leadership_support', models.BooleanField()),
                ('comments', models.TextField(blank=True)),
                ('assessor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IncidentResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_plan', models.BooleanField()),
                ('last_test_date', models.DateField(blank=True, null=True)),
                ('dedicated_team', models.BooleanField()),
                ('cyber_insurance', models.BooleanField()),
                ('top_threats', models.TextField(blank=True)),
                ('business_impact', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], max_length=50)),
                ('budget', models.CharField(blank=True, max_length=100)),
                ('challenges', models.TextField(blank=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
        ),
        migrations.CreateModel(
            name='FirewallAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('date_completed', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('firewall_type', models.CharField(max_length=100)),
                ('rule_count', models.IntegerField()),
                ('last_review_date', models.DateField()),
                ('logging_enabled', models.BooleanField()),
                ('vulnerabilities', models.TextField(blank=True)),
                ('compliance_status', models.CharField(choices=[('Compliant', 'Compliant'), ('Non-Compliant', 'Non-Compliant'), ('Partial', 'Partial')], max_length=50)),
                ('redundant_rules', models.TextField(blank=True)),
                ('shadowed_rules', models.TextField(blank=True)),
                ('assessor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workstations', models.IntegerField(default=0)),
                ('laptops', models.IntegerField(default=0)),
                ('mobile_devices', models.IntegerField(default=0)),
                ('physical_servers', models.IntegerField(default=0)),
                ('virtual_servers', models.IntegerField(default=0)),
                ('cloud_services', models.TextField(blank=True)),
                ('core_systems', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
        ),
        migrations.CreateModel(
            name='APIAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('date_completed', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('api_name', models.CharField(max_length=255)),
                ('endpoint_count', models.IntegerField()),
                ('authentication_mechanism', models.CharField(max_length=100)),
                ('data_sensitivity', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=50)),
                ('is_internal', models.BooleanField(default=True)),
                ('documentation_available', models.BooleanField()),
                ('rate_limiting', models.BooleanField()),
                ('vulnerabilities', models.TextField(blank=True)),
                ('compliance_status', models.CharField(choices=[('Compliant', 'Compliant'), ('Non-Compliant', 'Non-Compliant'), ('Partial', 'Partial')], max_length=50)),
                ('third_party_integrations', models.TextField(blank=True)),
                ('assessor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privileged_users', models.IntegerField()),
                ('mfa_implemented', models.BooleanField()),
                ('strong_password_policy', models.BooleanField()),
                ('role_based_access', models.BooleanField()),
                ('onboarding_process', models.TextField(blank=True)),
                ('offboarding_process', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.organization')),
            ],
        ),
    ]
